openapi: 3.0.3
info:
  title: Mosquito
  description: 'Mosquito - A lightweight task api'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/tasks/overdue:
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/tasks:
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created task in the backend.'
      operationId: storeANewlyCreatedTaskInTheBackend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ierqvkrilhyfasj
                description:
                  type: string
                  description: ''
                  example: aliquid
                state:
                  type: string
                  description: ''
                  example: todo
                  enum:
                    - todo
                deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2115-02-27'
                project_id:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - description
                - state
                - deadline
      security: []
  '/api/v1/tasks/{id}':
    get:
      summary: 'Display a specific task owned by the current user.'
      operationId: displayASpecificTaskOwnedByTheCurrentUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update a specific task for the current user.'
      operationId: updateASpecificTaskForTheCurrentUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vucob
                description:
                  type: string
                  description: ''
                  example: voluptatem
                state:
                  type: string
                  description: ''
                  example: done
                  enum:
                    - in_progress
                    - done
                project_id:
                  type: string
                  description: ''
                  example: null
                deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2056-11-15'
              required:
                - title
                - description
                - state
                - deadline
      security: []
    delete:
      summary: 'Remove a specified task for the current user.'
      operationId: removeASpecifiedTaskForTheCurrentUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task_id}/project':
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/v1/tasks/{task_id}/deadline':
    patch:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deadline:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2120-12-29'
              required:
                - deadline
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: 10
        required: true
        schema:
          type: integer
  /api/v1/projects:
    get:
      summary: 'Handle the incoming index request.'
      operationId: handleTheIncomingIndexRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/projects/{id}':
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sbuqtyunta
              required:
                - title
      security: []
    delete:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project.'
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/project:
    post:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ambjlhaqrcraxicg
              required:
                - title
      security: []
  '/api/v1/projects/{project_id}/tasks':
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/v1/users/{user_id}/tasks':
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 7
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: 'Log in an user.'
      operationId: logInAnUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: yfeil@example.net
                password:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - email
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
